{"basic_builder": {"appname": "TA-linode", "friendly_name": "Linode", "version": "0.0.2", "author": "Linode", "description": "The Linode Add-on for Splunk includes inputs for ingesting Linode account events into Splunk.", "theme": "#1CB35B", "large_icon": "iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAYAAABV7bNHAAAOAElEQVR4nO1ca3Ab13nFXTz5MgWSEIG9uwBIiaJkUrIkWiT1IF67BElgl9TDEIldUJLrVu40qdxMJrZVxTbTeOJakZ1JxnYtP2pHD+JBkapHHY87/ZFM2qbTNrU6aVo3Tpt6OkqmSSZje5w6jmzn9McSkAjiSYFey+Mzc4d/SOz3nb33e5zvggbDp/gUHzvYbDaP0WhMMAyTJIT8N8MwX7NYLBv1tks3zMzMMBaLZSPDMH9ACPlLQsgvCCHIW79kGOYJi8XSq7e9Hwm8Xq/NbDYPMgzzICHk7wgh/1eAlELrHYZhXjCbzTv09qHmsNvtzSaTSWAY5hQh5F8IIR9USEqh9S7DMLMmk2m33n7dEBoaGpxGo3GCYZhnCCGv3wAhxdZvCCEXTCZTQG9fV4SmzjU/ZKzmWpNSaH1ACHm5fRMr6u1zVeBF7jvt/e2wtNWtGjmWBiuc23hsv2cPQl8f/8eZmRlGb78rBi/QU3yYAxdiYd/YAqbeUjNi1nhaseHAFvi+GoWUUbH30mFEZ5XLsZmYRW+/KwYncgonUnAhFrxI4drtRB1tBDGvjJS6lkZwe9ah/94gRs8chLwwDSmjIpKMQ5pTEZ2NvxZ7PFant98VgxO5zbxA3+MEjSROpOBEiratbTCtsVZEitlqQdtGJ3rv7Ifw1F7I8wnI8wlEUwoiyXhuSXMqouenfiyejjXr7XfF6B7vbuJD9D+zuyi7eJGC+l24pXMNigXxRqcdnaObsOtPwogk40t2S6ElZVREk1NX5NPxNr39rgqcQC/xeQRxIRacQMGLFO397bCsrQchBNZGG5zb3dj2h7sx/OwdkBcSkC+oiKYKk7KUIAWRZPzn489PsXr7XBXcAvelggRl1+JucosdCDwmQ5pTtSOUVsqScv1a/P23Rl+Y8urtc1XgRX4i/4jlL+p3YaO6aXG3VEfMUoKUX8kvxG+uxrZzmOviQ/TdXKAuRFDAhc7xTox8M3aDBMXfi5xXturtc1XwHvHauBD9j1K7iAZZuId5iE9PIJouHohLEpRSEE3GP4icmRrQ2+eqwYXofMk4tEiS79QYpLmVEqT9HJuN+/X2t2rwIXqiHEGsz4nBh/yQ5hIrJiiaVjB2bnJMb3+rhmeYi5SKQVmCtv3RwA0RJGVURM9P7tfb36rhCXs6eIG+VYok1udEz11bShaDZWshrd1I6O1v1eiJ9Vg4gV4uGaj9LnQd7EZkdqqiwrDQki8kED2vHNXb3xWBC9EzpeIQDbDokDsw8uIdK0718nwCkfPKPXr7uiK4Be6erPRRKtWHnhxfcaofvziN6Ln4g3r7uiJsFGgrJ9CznEhRLBbRIIuhR8NVx6FoStH6tjn1nbFvTv2O3r6uGDMzM4xb5O7nRe69QvGI9bkwcGKo4kymETMNKa38Rkop50fOTm6vhZ0Oh6OxsbFxbS0+a0XwhLgxTqBv5Mck1ufE1mM7yhIUTWnxZuLi9Dvy/HRq7Jxas+mGyWQaJYT8EyHkDYZhjrW1tTXV6rOrgjvq7nSH6SU+TD/MHjnqd+HWw71Fj1iWmEgyjr7P+eDczv+r1WrdUAt7bDZbB8MwzxFC3s/Tpl41Go2TgUDAVIvnVIz169dbmXrr3fbuVq2RFShogEXXHV2IzE4VJCaaVtB/bwBre9nrHfgpwzB3r1Ss93q9NoZhPksI+UkZdfOvTSZTqNY8LENTU1MrwzC/Twi5nH24jTaC9bnACRTeiAfh5w/kUr18IQEpo2LwiwKc23gw5qJjpDmr1dpVjS0mk8lPCPl2Fbr4VYZhzlksli2rQk6f3FdvdtT9baGHm1psaO9vhzvMIfSEDHl+GtKcil1fCoPt98JsrWgicsXuaVPL2RHLxIw2R/3DhJB3VzhVeZNhmFPcQGdVL6QsZjDDUB/73QZPc8EHMzYL7Le2YOhkGEN/GgEd7IDZVtmoyNpch669mxF4fPxVAKSUHYEjXhv1sT9a090Cpm5loyhPsAu+U9IjNSXIYDAYuGHu63yYQ3OXvehxsa9rg6XBVpGhjNkMOuCF72QEey8dhpRRLx/93lFzSRtiXB0vcD/gwxycO52wuRoqJsZmb8CWo4MYvzgNeeGQVHOC3CI9xIuaYN+6uRVMhTuk0GrtdqL/3gCkjAJpTtWa1aTy2pFvHbFln9fY2OhgGOarhJBXsrdCdsZ21vEh+iNO0MZQnEDR0tsKY3PpUZSjx4WhRyNaxZ5SrkYyq6BeekR2Gx+iV7NTjbU71sJUxrD81eSyY/NdAxg7N5VL+7luPqm8MYN/sxgMBoPRaJwkhPz7dX/7NsMwx9k+to0X6Q+vr+h5kYIdcqHB0wzGsnRnm20WrJ/oxejZSU03TyuIpOI/3z+fcNWcoE6xs5kLsW9kjeNFCtceJyyO8vN7a3Md1o/3YviZA9pbzJt8SBkVUlq94trODxFC5ooeS4vlnx19a9/k89ue7Eu7fS3MrdoRb6J29N8XhLxw7Xnai4j/4PqdWlPwAvvKklZD1Gqger6piENm0J2d8J2MQp5PZGdgywvJtILws7GrdY6mX5WNXVYzbulcAxpYnPjmjaLYISf4gBfCk3uX7NJs6RFJKX+1KuRoBNGvLJM+FovF/ODdtsmF/vtDuRhTsgVJKwg/dwfq1xbOkoWWucUGx3YH8neTpnD2Q56fXi6rLCQQTcafWTWCPCJ3oKB4trjFW3pa0expxZbfG0RkdkozqAIRLZpSMPLiQTS57FXFNMZiRoOnGc5dzhxJrM+J27+wq2BfKC8kIKXV46tGkDfs3ciH6K9Lzcn6Pr8TEy8drko8i6YUjJ6dxBp3a9UZ0Wy1wDuyHrzI5frCwQcLDxHk+QTkpKqsGkF9cl89J9DXi+lCrM+JzXdvq1rAj6biiJyfgr3TUV1WpHYMHA/B/9gYaPDaS9rzyPCyY704/X1bSiVuWzWCDAaDgRfYvyimUVO/C93xjdooZwX6dOuG9orJoTs7IDy1DxMvHcKuL4dA/a6cHf7HI0uUhcUE8bqc+Qhmb7xAHyimUdMAi87xToyeOVi1Ph1NK3Bu58qXDGvq0XukPxf8pbkEBh7wg/U5wYVYuEUOoSdlRNPafYHxi9OQ0sorkfOKZ9XJMRgMBrfgHi4mv9IgC3eYh/j03qpvecjzCWya7kU9X/wmW2u3E3u+Mrok+EtzCew4vgc04AQNsvCMujH8zD7IF1RIGQXRVPxr8qWj9R8JOQaDwRCLxYx8iJ7gBPrbYiT5HxurWJ+OphRIGRVDJ0fRIXfk2ofrm1Gz1YJ10R6MnpnUapk8YoceHbnoGnL+AydQdMgdWga9kHgzmlTu+siIyQcncPdwAn0/nyTqd2HwoUBFgVqeT2D07EFsPbYDvEBBA65cld4+0A6T3YYmlx23f96/eFNt+a6U5xPYe/HwUXufvZn62Se7Dm74bWQ2/lo0mdilGzlZuAX3YT7M/TK/UNteZhQdTSuQ5xMYOB6CJ9wBGnTlstCSAjRI4TulNZmlSI4klSNZm3qmbxsRT8fcOtJyDQ6Ho7HB2/wy9btyZX+5UbQ8n8DIn8fQGbkVZpsFjM2Mtq1tyA/8uXjy7L6S8UyaUyFl1H16c7EEgUDAZDQa9xNCvk8IgcVRp0mvi9fyNkx2F901gycE2L1tSytisxnNXXYtVWcHAUEWnhEe4unSAV++kMB4JjGsNydL4BnyuCyO+reWVLStNrj2aKlWG0Vfu3Umzycw8mIM66Seokqj2WaFJ9xZFUHjF6cRSSnfn0jeyevNyRL0ne4zUz972cY2LnHS1GKDc6cTnlE3hKfGcxc7dz4oomXd2qK1TTPXisETInY/LOQKvlIEZSeyUkZdWBVtpxbgh+mLnEiRT5Kx2Yr2gXYEvxFFZDaOronNsNQVF9a4PeswfHo/Jl46hN0Pi2UJkjIqpDnlfSmtfLmcRKsreIH9DD9MQYPscpIaLNhwoBdtG51FibHZG7D5dwevVcQZFUMnw1dpUMtgNMjCE87ef7x2VOU59WdSUp3U2/+ycA+7d3MC+2HWmTraWJSM/OXoYeE7GdHUvtS1ZjIyO/UdPkS/yAn0fS50/a0RbZYfzSjfG09ObdPb94rQIXS08wL7v7npapCFrQxJZpsFXRObcxrxsnSdVr5rMBgMfIge4QX2bc8ID+HPJjRy5tTZfQvT+l1MqBYzMzMML7B/k+vsF7NPvfuWwoGYb8XAH4cKatJZgqIp5fLMt2ZMBoPBQP006B3h/0d4euKqPJe4r9zM7GMJXuCeWFLgLe6mfI06G4jlheLVtfalFuW16xvLTfs29foeGQ7r6eMNgRfZO5dpQ9mdxDehrqURm+8a0DJPmeZVyiiIJpX/Ul9Wb9Hbr5rBHXb3cQL7YSGNmvW50H+/D+MXD1WmS2vf2fjpvoVDrXr7VTN0j3c3cQJ9tZCARv1ODDzgq1h+1WQM5WexzJ0Ovf2qKdxBdw8vcj/OP2qsz4nbPtNXsewhZdQrUjou35TBuBy4ENfPi9xPrieJ9TmxabqnrLKo3VVU/z6amv5k//sKrXCkv8iSRP0urN+/HmPnJgvq09H04sWFtPr83otH1uht/0cCXuRHeJF7OzuS9o55EH5u/7JdpOnF6q8jqfgXPpFHqhS4ILefF7jc/cXgN6SlIxitC78ip9Ta39G5WcAJnMqL3Hs04MLuhwVIc9oUYvFu9Lfl2Zvs65erAbdA76YB1wc77tsNeWF6sRlVnh079wkqBG8UrsH2z9322dsxPj/9biQ5dUxvez6W2Hqs/6HRF27CL8t9ik+xYvw/WmfzcnISSCwAAAAASUVORK5CYII=", "small_icon": "iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAFbElEQVRYhdXXXWxTZRgA4Pc7XX/315b+rOf7unWMbsONCWNj62Th7JyuXXs6hZRuPaeA8S8oCT8KYhQiQ+OFmkDUhCAGFmBsPd288+fKxEQv5MIENV4pN0aQmOiFJooKvl50Le1WxvjpiG/y3jXfefqd93vf7wD8T2MFAOwmhHxKCPkOAHYAQOVSAnQAsJbjuFcJIRcIIdcIITgnfwSAfQBQU1aJ3mo+Sgj5vgTgZnkFAA7W1tfaygKigueb6oZqJDrulpgKkx75Ph8GDgUxfCL+dHlAEh1nIo+uHhcabMZ5CI7j0LrcgaueXIeD78VR1lSUNRUjE8recoG2M4lHJmbT1mpDzqBDk9WCvqFW7H89grKmYnRKyaecVjB6LnmoLCCv4OkqBDGRx4ZwA0bOjs6D5DOtYORc8s2ygNwhdyUT+d8LQd5BhkNnRkpjcrs0lTxWFhAAAJPo+UIQFTwoHX9kQVA0rZwuG8gr0mNzQf1vhBfeIU2ZLhuIinRrYR1RwYPdL/UvCBrOpD4oG8gn1PmoxF/JgwZ47HimE6Pp0kUta2p5QQAAfJCvZ0H6RQ7VrLSWPO7DM1suxzRlv5BJVN1iSTvHcXsBoP7OUWt5i7PL+RkTeWyMNRZBQifj6N/UjsZa08cAwC+wDAcAWwghl2ab628cx70GANbbwujd5l5CyJeEEDTTSmQixaHTCQyPJ7A1uQaNNebCDv6zwWxQ5q5hcpsaCSGf3GT0/AQAO1iAmRcFogN0pGZ5LRIuO9P01QZcsbENTVZL8cIch3VdXtxwZPgyIJCiNQTPHlvbMuSMuvkjSK/DlkQHDh6Pdy0K5BVdTSzIX7e32ZFUlB60tQ127DkgoZxWUNbUXxKY0QHARkLIBQDY7hX5fUzi0dNfhxZalf9zFlc1BsYGUc6oV8OZhH1RIEiAjkn0EhN5dHY7UWeqyEOMVguueqoHo5PJG0V+TvnTUGn8qBBssJp/reury7cPR6cD6Xofhk5txuiUgrGM+gOMAbc4EACwIP0wt5jnoTo0OyqxafiB7ILp4qM/dHYUDVWmEq+Gw9pmG1Ih2882HI3eOBwzqc8XjQEAYCIbK+zY/pFmjGVSpZvjZHJ+fc2mvcWF/pHW7Ag69nB+IMc09dRtgehAnVzYsRsiDcWvaU5WuqqLd6dCh/5N7RidUnDlo+3IRB5DJ7N3qFhGnQlmErW3t0MBZmcSvVi4S6FT8ZKYoTMjyEQv6msM2cJ1VmHg5SDKWraTt25tv+gNeTE6OfpPVEsehLGxxddOEUpklEn0q9xME96S542NvlcH0RfzIR3wIBU8yPc3YOjk5hu/yag4NDHa3bSxaX94KinfEaQgnDqzfsLZ7UQqeDDwiph/UHg8gfWiH7kKHVpbbEgHsnNvzZ6eoqKXNRVjM6r/biEAAGBrs73AGXXI6Tl0dDqw87lelDUVew6IaHFW5etlWasbV8SbZ0Hr8iBZU1GeTk1G3o4Y7wmIilR0B9zZblvBoS/ix8ZwC3KzXyWcXof++CqUpxRse+LB63SAxzW7s6BYRv0rllGen9vB7yp4gXcwiV519brmjYBKVzX2HR7Mf3lsOBI5zCT69epd3Rh7P3VF1tTgPYMUhlfiv2Uij+6AO9+x2frlGB5PFNwAVJQnlZ1WwWrtfLb3neHMtju/ZtwqmMRP5I69u9eFHdt7UJ57WUsrGJ1UXiwbojCoRAeYRP/IHf3C9p/L2LR6NTqpxJcEBABARZpgEv2bCh7sPSQU96Lp1OXY9BZhyTC58Ab5x6nEX1u9a/ZYZ0/S+dBU0rvkmFwwie1aua3939h0CmUtdWL43WHLfcPkYuVjHQfkdGrn/XYsSfwHb79GkqSKWPUAAAAASUVORK5CYII=", "visible": true, "tab_version": "4.0.0", "tab_build_no": "0", "build_no": 6}, "data_input_builder": {"datainputs": [{"index": "default", "sourcetype": "linode_invoices", "interval": "180", "use_external_validation": true, "streaming_mode_xml": true, "name": "linode_account_invoices", "title": "Linode Account Invoices", "description": "", "type": "customized", "parameters": [{"name": "linode_api_token", "label": "Linode API Token", "help_string": "The Linode Personal Access Token associated with the account to collect events from.", "required": true, "format_type": "password", "default_value": "", "placeholder": "", "type": "password", "value": ""}, {"name": "start_date", "label": "Start Date", "help_string": "If specified, the event collector will collect all events that occurred after the given date.", "required": false, "format_type": "text", "default_value": "", "placeholder": "y-m-dTH:M:S", "type": "text", "value": ""}], "data_inputs_options": [{"type": "customized_var", "name": "linode_api_token", "title": "Linode API Token", "description": "The Linode Personal Access Token associated with the account to collect events from.", "required_on_edit": false, "required_on_create": true, "format_type": "password", "default_value": "", "placeholder": ""}, {"type": "customized_var", "name": "start_date", "title": "Start Date", "description": "If specified, the event collector will collect all events that occurred after the given date.", "required_on_edit": false, "required_on_create": false, "format_type": "text", "default_value": "", "placeholder": "y-m-dTH:M:S"}], "code": "\n# encoding = utf-8\n\nimport os\nimport sys\nimport time\nimport datetime\n\ndef validate_input(helper, definition):\n    from ta_linode_util.linode_event_base import BaseLinodeEventLogger\n    BaseLinodeEventLogger.validate_inputs(definition.parameters)\n\ndef collect_events(helper, ew):\n    try:\n        from ta_linode_util.account_invoices import AccountInvoicesHandler\n        handler = AccountInvoicesHandler(helper, ew)\n        handler.collect_events()\n    except Exception as exc:\n        helper.log_error('failed to collect linode account invoices: {}'.format(exc))\n        raise exc\n", "customized_options": [{"name": "start_date", "value": ""}], "uuid": "a1a295a8a6d34f389c2eea4a3d7ab67d", "sample_count": 0}, {"index": "default", "sourcetype": "linode_account_payments", "interval": "180", "use_external_validation": true, "streaming_mode_xml": true, "name": "linode_account_payments", "title": "Linode Account Payments", "description": "", "type": "customized", "parameters": [{"name": "linode_api_token", "label": "Linode API Token", "help_string": "The Linode Personal Access Token associated with the account to collect events from.", "required": true, "format_type": "password", "default_value": "", "placeholder": "", "type": "password", "value": ""}, {"name": "start_date", "label": "Start Date", "help_string": "If specified, the event collector will collect all events that occurred after the given date.", "required": false, "format_type": "text", "default_value": "", "placeholder": "y-m-dTH:M:S", "type": "text", "value": ""}], "data_inputs_options": [{"type": "customized_var", "name": "linode_api_token", "title": "Linode API Token", "description": "The Linode Personal Access Token associated with the account to collect events from.", "required_on_edit": false, "required_on_create": true, "format_type": "password", "default_value": "", "placeholder": ""}, {"type": "customized_var", "name": "start_date", "title": "Start Date", "description": "If specified, the event collector will collect all events that occurred after the given date.", "required_on_edit": false, "required_on_create": false, "format_type": "text", "default_value": "", "placeholder": "y-m-dTH:M:S"}], "code": "\n# encoding = utf-8\n\nimport os\nimport sys\nimport time\nimport datetime\n\ndef validate_input(helper, definition):\n    from ta_linode_util.linode_event_base import BaseLinodeEventLogger\n    BaseLinodeEventLogger.validate_inputs(definition.parameters)\n\ndef collect_events(helper, ew):\n    try:\n        from ta_linode_util.account_payments import AccountPaymentsHandler\n        handler = AccountPaymentsHandler(helper, ew)\n        handler.collect_events()\n    except Exception as exc:\n        helper.log_error('failed to collect linode account payments: {}'.format(exc))\n        raise exc\n", "customized_options": [{"name": "start_date", "value": ""}], "uuid": "92a771d3c58a45f3bc7138e39104de48", "sample_count": 0}, {"index": "default", "sourcetype": "linode_account_events", "interval": "180", "use_external_validation": true, "streaming_mode_xml": true, "name": "linode_account_events", "title": "Linode Account Events", "description": "", "type": "customized", "parameters": [{"name": "linode_api_token", "label": "Linode API Token", "help_string": "The Linode Personal Access Token associated with the account to collect events from.", "required": true, "format_type": "password", "default_value": "", "placeholder": "", "type": "password", "value": ""}, {"name": "start_date", "label": "Start Date", "help_string": "If specified, the event collector will collect all events that occurred after the given date.", "required": false, "format_type": "text", "default_value": "", "placeholder": "y-m-dTH:M:S", "type": "text", "value": ""}], "data_inputs_options": [{"type": "customized_var", "name": "linode_api_token", "title": "Linode API Token", "description": "The Linode Personal Access Token associated with the account to collect events from.", "required_on_edit": false, "required_on_create": true, "format_type": "password", "default_value": "", "placeholder": ""}, {"type": "customized_var", "name": "start_date", "title": "Start Date", "description": "If specified, the event collector will collect all events that occurred after the given date.", "required_on_edit": false, "required_on_create": false, "format_type": "text", "default_value": "", "placeholder": "y-m-dTH:M:S"}], "code": "\n# encoding = utf-8\n\nimport os\nimport sys\nimport time\nimport datetime\n\ndef validate_input(helper, definition):\n    from ta_linode_util.linode_event_base import BaseLinodeEventLogger\n    BaseLinodeEventLogger.validate_inputs(definition.parameters)\n\ndef collect_events(helper, ew):\n    try:\n        from ta_linode_util.account_events import AccountEventsHandler\n        handler = AccountEventsHandler(helper, ew)\n        handler.collect_events()\n    except Exception as exc:\n        helper.log_error('failed to collect linode account events: {}'.format(exc))\n        raise exc\n", "customized_options": [{"name": "start_date", "value": ""}], "uuid": "e3d16e954599487bb2b7864fdbe36d17", "sample_count": 0}, {"index": "default", "sourcetype": "linode_service_transfers", "interval": "180", "use_external_validation": true, "streaming_mode_xml": true, "name": "linode_service_transfers", "title": "Linode Service Transfers", "description": "", "type": "customized", "parameters": [{"name": "linode_api_token", "label": "Linode API Token", "help_string": "The Linode Personal Access Token associated with the account to collect events from.", "required": true, "format_type": "password", "default_value": "", "placeholder": "", "type": "password", "value": ""}, {"name": "start_date", "label": "Start Date", "help_string": "If specified, the event collector will collect all events that occurred after the given date.", "required": false, "format_type": "text", "default_value": "", "placeholder": "y-m-dTH:M:S", "type": "text", "value": ""}], "data_inputs_options": [{"type": "customized_var", "name": "linode_api_token", "title": "Linode API Token", "description": "The Linode Personal Access Token associated with the account to collect events from.", "required_on_edit": false, "required_on_create": true, "format_type": "password", "default_value": "", "placeholder": ""}, {"type": "customized_var", "name": "start_date", "title": "Start Date", "description": "If specified, the event collector will collect all events that occurred after the given date.", "required_on_edit": false, "required_on_create": false, "format_type": "text", "default_value": "", "placeholder": "y-m-dTH:M:S"}], "code": "\n# encoding = utf-8\n\nimport os\nimport sys\nimport time\nimport datetime\n\ndef validate_input(helper, definition):\n    from ta_linode_util.linode_event_base import BaseLinodeEventLogger\n    BaseLinodeEventLogger.validate_inputs(definition.parameters)\n\ndef collect_events(helper, ew):\n    try:\n        from ta_linode_util.account_service_transfers import AccountServiceTransfersHandler\n        handler = AccountServiceTransfersHandler(helper, ew)\n        handler.collect_events()\n    except Exception as exc:\n        helper.log_error('failed to collect linode account service transfers: {}'.format(exc))\n        raise exc\n", "customized_options": [{"name": "start_date", "value": ""}], "uuid": "42237d36f1dc46af8d28a432d4c6d57b", "sample_count": 0}, {"index": "default", "sourcetype": "linode_account_logins", "interval": "180", "use_external_validation": true, "streaming_mode_xml": true, "name": "linode_account_logins", "title": "Linode Account Logins", "description": "", "type": "customized", "parameters": [{"name": "linode_api_token", "label": "Linode API Token", "help_string": "The Linode Personal Access Token associated with the account to collect events from.", "required": true, "format_type": "password", "default_value": "", "placeholder": "", "type": "password", "value": ""}, {"name": "start_date", "label": "Start Date", "help_string": "If specified, the event collector will collect all events that occurred after the given date.", "required": false, "format_type": "text", "default_value": "", "placeholder": "y-m-dTH:M:S", "type": "text", "value": "2020-01-01T00:01:01"}], "data_inputs_options": [{"type": "customized_var", "name": "linode_api_token", "title": "Linode API Token", "description": "The Linode Personal Access Token associated with the account to collect events from.", "required_on_edit": false, "required_on_create": true, "format_type": "password", "default_value": "", "placeholder": ""}, {"type": "customized_var", "name": "start_date", "title": "Start Date", "description": "If specified, the event collector will collect all events that occurred after the given date.", "required_on_edit": false, "required_on_create": false, "format_type": "text", "default_value": "", "placeholder": "y-m-dTH:M:S"}], "code": "\n# encoding = utf-8\n\nimport os\nimport sys\nimport time\nimport datetime\n\ndef validate_input(helper, definition):\n    from ta_linode_util.linode_event_base import BaseLinodeEventLogger\n    BaseLinodeEventLogger.validate_inputs(definition.parameters)\n\ndef collect_events(helper, ew):\n    try:\n        from ta_linode_util.account_logins import AccountLoginsHandler\n        handler = AccountLoginsHandler(helper, ew)\n        handler.collect_events()\n    except Exception as exc:\n        helper.log_error('failed to collect linode account logins: {}'.format(exc))\n        raise exc\n", "customized_options": [{"name": "start_date", "value": "2020-01-01T00:01:01"}], "uuid": "90fa8902ae15425ea8bd819db5e3c752", "sample_count": 0}, {"index": "default", "sourcetype": "linode_account_notifications", "interval": "30", "use_external_validation": true, "streaming_mode_xml": true, "name": "linode_account_notifications", "title": "Linode Account Notifications", "description": "", "type": "customized", "parameters": [{"name": "linode_api_token", "label": "Linode API Token", "help_string": "The Linode Personal Access Token associated with the account to collect events from.", "required": true, "format_type": "password", "default_value": "", "placeholder": "", "type": "password", "value": ""}, {"name": "start_date", "label": "Start Date", "help_string": "If specified, the event collector will collect all events that occurred after the given date.", "required": false, "format_type": "text", "default_value": "", "placeholder": "y-m-dTH:M:S", "type": "text", "value": ""}], "data_inputs_options": [{"type": "customized_var", "name": "linode_api_token", "title": "Linode API Token", "description": "The Linode Personal Access Token associated with the account to collect events from.", "required_on_edit": false, "required_on_create": true, "format_type": "password", "default_value": "", "placeholder": ""}, {"type": "customized_var", "name": "start_date", "title": "Start Date", "description": "If specified, the event collector will collect all events that occurred after the given date.", "required_on_edit": false, "required_on_create": false, "format_type": "text", "default_value": "", "placeholder": "y-m-dTH:M:S"}], "code": "\n# encoding = utf-8\n\nimport os\nimport sys\nimport time\nimport datetime\n\ndef validate_input(helper, definition):\n    from ta_linode_util.linode_event_base import BaseLinodeEventLogger\n    BaseLinodeEventLogger.validate_inputs(definition.parameters)\n\ndef collect_events(helper, ew):\n    try:\n        from ta_linode_util.account_notifications import AccountNotificationsHandler\n        handler = AccountNotificationsHandler(helper, ew)\n        handler.collect_events()\n    except Exception as exc:\n        helper.log_error('failed to collect linode account notifications: {}'.format(exc))\n        raise exc\n", "customized_options": [{"name": "start_date", "value": ""}], "uuid": "f004ba2128fa430c8bfe071de660e5c6", "sample_count": 0}]}, "field_extraction_builder": {"account_events": {"data_format": "unstructured_data"}, "linode_account_events": {"is_parsed": true, "data_format": "json"}, "linode_account_logins": {"is_parsed": true, "data_format": "json"}}, "global_settings_builder": {"global_settings": {"log_settings": {"log_level": "DEBUG"}}}, "sourcetype_builder": {"account_events": {"metadata": {"event_count": 0, "data_input_name": null, "extractions_count": 0, "cims_count": 0}}, "linode_account_logins": {"metadata": {"event_count": 0, "data_input_name": "linode_account_logins", "extractions_count": 0, "cims_count": 0}}, "linode_account_notifications": {"metadata": {"event_count": 0, "data_input_name": "linode_account_notifications", "extractions_count": 0, "cims_count": 0}}, "linode_invoices": {"metadata": {"event_count": 0, "data_input_name": "linode_account_invoices", "extractions_count": 0, "cims_count": 0}}, "linode_account_payments": {"metadata": {"event_count": 0, "data_input_name": "linode_account_payments", "extractions_count": 0, "cims_count": 0}}, "linode_service_transfers": {"metadata": {"event_count": 0, "data_input_name": "linode_service_transfers", "extractions_count": 0, "cims_count": 0}}, "linode_account_events": {"metadata": {"event_count": 0, "data_input_name": "linode_account_events", "extractions_count": 0, "cims_count": 0}}}, "validation": {}}